"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}
/*! choices.js v9.0.1 | Â© 2019 Josh Johnson | https://github.com/jshjohnson/Choices#readme */function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}document.addEventListener("DOMContentLoaded",(function(){document.getElementsByClassName("burger")[0].addEventListener("click",(function(){for(var e=0;e<4;e++)document.getElementsByClassName("header__li")[e].classList.toggle("header__li--close")}))})),window.Choices=function(t){var i={};function n(e){if(i[e])return i[e].exports;var s=i[e]={i:e,l:!1,exports:{}};return t[e].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=t,n.c=i,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(t,i){if(1&i&&(t=n(t)),8&i)return t;if(4&i&&"object"==e(t)&&t&&t.__esModule)return t;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&i&&"string"!=typeof t)for(var o in t)n.d(s,o,function(e){return t[e]}.bind(null,o));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/public/assets/scripts/",n(n.s=4)}([function(t,i,n){var s=function(t){return function(t){return!!t&&"object"==e(t)}(t)&&!function(e){var t=Object.prototype.toString.call(e);return"[object RegExp]"===t||"[object Date]"===t||function(e){return e.$$typeof===o}(e)}(t)},o="function"==typeof Symbol&&Symbol.for?Symbol.for("react.element"):60103;function r(e,t){return!1!==t.clone&&t.isMergeableObject(e)?c((i=e,Array.isArray(i)?[]:{}),e,t):e;var i}function a(e,t,i){return e.concat(t).map((function(e){return r(e,i)}))}function l(e){return Object.keys(e).concat(function(e){return Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(e).filter((function(t){return e.propertyIsEnumerable(t)})):[]}(e))}function c(e,t,i){(i=i||{}).arrayMerge=i.arrayMerge||a,i.isMergeableObject=i.isMergeableObject||s,i.cloneUnlessOtherwiseSpecified=r;var n=Array.isArray(t);return n===Array.isArray(e)?n?i.arrayMerge(e,t,i):function(e,t,i){var n={};return i.isMergeableObject(e)&&l(e).forEach((function(t){n[t]=r(e[t],i)})),l(t).forEach((function(s){(function(e,t){try{return t in e&&!(Object.hasOwnProperty.call(e,t)&&Object.propertyIsEnumerable.call(e,t))}catch(e){return!1}})(e,s)||(i.isMergeableObject(t[s])&&e[s]?n[s]=function(e,t){if(!t.customMerge)return c;var i=t.customMerge(e);return"function"==typeof i?i:c}(s,i)(e[s],t[s],i):n[s]=r(t[s],i))})),n}(e,t,i):r(t,i)}c.all=function(e,t){if(!Array.isArray(e))throw new Error("first argument should be an array");return e.reduce((function(e,i){return c(e,i,t)}),{})};var u=c;t.exports=u},function(e,t,i){(function(e,n){var s,o=i(3);s="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:n;var r=Object(o.a)(s);t.a=r}).call(this,i(5),i(6)(e))},function(t,i,n){
/*!
   * Fuse.js v3.4.5 - Lightweight fuzzy-search (http://fusejs.io)
   * 
   * Copyright (c) 2012-2017 Kirollos Risk (http://kiro.me)
   * All Rights Reserved. Apache Software License 2.0
   * 
   * http://www.apache.org/licenses/LICENSE-2.0
   */
t.exports=function(t){var i={};function n(e){if(i[e])return i[e].exports;var s=i[e]={i:e,l:!1,exports:{}};return t[e].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=t,n.c=i,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(t,i){if(1&i&&(t=n(t)),8&i)return t;if(4&i&&"object"==e(t)&&t&&t.__esModule)return t;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:t}),2&i&&"string"!=typeof t)for(var o in t)n.d(s,o,function(e){return t[e]}.bind(null,o));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=1)}([function(e,t){e.exports=function(e){return Array.isArray?Array.isArray(e):"[object Array]"===Object.prototype.toString.call(e)}},function(t,i,n){function s(t){return(s="function"==typeof Symbol&&"symbol"==e(Symbol.iterator)?function(t){return e(t)}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":e(t)})(t)}var o=n(2),r=n(8),a=n(0),l=function(){function e(t,i){var n=i.location,s=void 0===n?0:n,o=i.distance,a=void 0===o?100:o,l=i.threshold,c=void 0===l?.6:l,u=i.maxPatternLength,h=void 0===u?32:u,d=i.caseSensitive,f=void 0!==d&&d,m=i.tokenSeparator,p=void 0===m?/ +/g:m,v=i.findAllMatches,g=void 0!==v&&v,b=i.minMatchCharLength,y=void 0===b?1:b,_=i.id,E=void 0===_?null:_,S=i.keys,w=void 0===S?[]:S,I=i.shouldSort,O=void 0===I||I,C=i.getFn,L=void 0===C?r:C,T=i.sortFn,A=void 0===T?function(e,t){return e.score-t.score}:T,x=i.tokenize,k=void 0!==x&&x,P=i.matchAllTokens,M=void 0!==P&&P,F=i.includeMatches,D=void 0!==F&&F,j=i.includeScore,N=void 0!==j&&j,R=i.verbose,B=void 0!==R&&R;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.options={location:s,distance:a,threshold:c,maxPatternLength:h,isCaseSensitive:f,tokenSeparator:p,findAllMatches:g,minMatchCharLength:y,id:E,keys:w,includeMatches:D,includeScore:N,shouldSort:O,getFn:L,sortFn:A,verbose:B,tokenize:k,matchAllTokens:M},this.setCollection(t)}var t;return(t=[{key:"setCollection",value:function(e){return this.list=e,e}},{key:"search",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{limit:!1};this._log('---------\nSearch pattern: "'.concat(e,'"'));var i=this._prepareSearchers(e),n=i.tokenSearchers,s=i.fullSearcher,o=this._search(n,s),r=o.weights,a=o.results;return this._computeScore(r,a),this.options.shouldSort&&this._sort(a),t.limit&&"number"==typeof t.limit&&(a=a.slice(0,t.limit)),this._format(a)}},{key:"_prepareSearchers",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",t=[];if(this.options.tokenize)for(var i=e.split(this.options.tokenSeparator),n=0,s=i.length;n<s;n+=1)t.push(new o(i[n],this.options));return{tokenSearchers:t,fullSearcher:new o(e,this.options)}}},{key:"_search",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1?arguments[1]:void 0,i=this.list,n={},s=[];if("string"==typeof i[0]){for(var o=0,r=i.length;o<r;o+=1)this._analyze({key:"",value:i[o],record:o,index:o},{resultMap:n,results:s,tokenSearchers:e,fullSearcher:t});return{weights:null,results:s}}for(var a={},l=0,c=i.length;l<c;l+=1)for(var u=i[l],h=0,d=this.options.keys.length;h<d;h+=1){var f=this.options.keys[h];if("string"!=typeof f){if(a[f.name]={weight:1-f.weight||1},f.weight<=0||f.weight>1)throw new Error("Key weight has to be > 0 and <= 1");f=f.name}else a[f]={weight:1};this._analyze({key:f,value:this.options.getFn(u,f),record:u,index:l},{resultMap:n,results:s,tokenSearchers:e,fullSearcher:t})}return{weights:a,results:s}}},{key:"_analyze",value:function(e,t){var i=e.key,n=e.arrayIndex,s=void 0===n?-1:n,o=e.value,r=e.record,l=e.index,c=t.tokenSearchers,u=void 0===c?[]:c,h=t.fullSearcher,d=void 0===h?[]:h,f=t.resultMap,m=void 0===f?{}:f,p=t.results,v=void 0===p?[]:p;if(null!=o){var g=!1,b=-1,y=0;if("string"==typeof o){this._log("\nKey: ".concat(""===i?"-":i));var _=d.search(o);if(this._log('Full text: "'.concat(o,'", score: ').concat(_.score)),this.options.tokenize){for(var E=o.split(this.options.tokenSeparator),S=[],w=0;w<u.length;w+=1){var I=u[w];this._log('\nPattern: "'.concat(I.pattern,'"'));for(var O=!1,C=0;C<E.length;C+=1){var L=E[C],T=I.search(L),A={};T.isMatch?(A[L]=T.score,g=!0,O=!0,S.push(T.score)):(A[L]=1,this.options.matchAllTokens||S.push(1)),this._log('Token: "'.concat(L,'", score: ').concat(A[L]))}O&&(y+=1)}b=S[0];for(var x=S.length,k=1;k<x;k+=1)b+=S[k];b/=x,this._log("Token score average:",b)}var P=_.score;b>-1&&(P=(P+b)/2),this._log("Score average:",P);var M=!this.options.tokenize||!this.options.matchAllTokens||y>=u.length;if(this._log("\nCheck Matches: ".concat(M)),(g||_.isMatch)&&M){var F=m[l];F?F.output.push({key:i,arrayIndex:s,value:o,score:P,matchedIndices:_.matchedIndices}):(m[l]={item:r,output:[{key:i,arrayIndex:s,value:o,score:P,matchedIndices:_.matchedIndices}]},v.push(m[l]))}}else if(a(o))for(var D=0,j=o.length;D<j;D+=1)this._analyze({key:i,arrayIndex:D,value:o[D],record:r,index:l},{resultMap:m,results:v,tokenSearchers:u,fullSearcher:d})}}},{key:"_computeScore",value:function(e,t){this._log("\n\nComputing score:\n");for(var i=0,n=t.length;i<n;i+=1){for(var s=t[i].output,o=s.length,r=1,a=1,l=0;l<o;l+=1){var c=e?e[s[l].key].weight:1,u=(1===c?s[l].score:s[l].score||.001)*c;1!==c?a=Math.min(a,u):(s[l].nScore=u,r*=u)}t[i].score=1===a?r:a,this._log(t[i])}}},{key:"_sort",value:function(e){this._log("\n\nSorting...."),e.sort(this.options.sortFn)}},{key:"_format",value:function(e){var t=[];if(this.options.verbose){var i=[];this._log("\n\nOutput:\n\n",JSON.stringify(e,(function(e,t){if("object"===s(t)&&null!==t){if(-1!==i.indexOf(t))return;i.push(t)}return t}))),i=null}var n=[];this.options.includeMatches&&n.push((function(e,t){var i=e.output;t.matches=[];for(var n=0,s=i.length;n<s;n+=1){var o=i[n];if(0!==o.matchedIndices.length){var r={indices:o.matchedIndices,value:o.value};o.key&&(r.key=o.key),o.hasOwnProperty("arrayIndex")&&o.arrayIndex>-1&&(r.arrayIndex=o.arrayIndex),t.matches.push(r)}}})),this.options.includeScore&&n.push((function(e,t){t.score=e.score}));for(var o=0,r=e.length;o<r;o+=1){var a=e[o];if(this.options.id&&(a.item=this.options.getFn(a.item,this.options.id)[0]),n.length){for(var l={item:a.item},c=0,u=n.length;c<u;c+=1)n[c](a,l);t.push(l)}else t.push(a.item)}return t}},{key:"_log",value:function(){var e;this.options.verbose&&(e=console).log.apply(e,arguments)}}])&&function(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}(e.prototype,t),e}();t.exports=l},function(e,t,i){var n=i(3),s=i(4),o=i(7),r=function(){function e(t,i){var n=i.location,s=void 0===n?0:n,r=i.distance,a=void 0===r?100:r,l=i.threshold,c=void 0===l?.6:l,u=i.maxPatternLength,h=void 0===u?32:u,d=i.isCaseSensitive,f=void 0!==d&&d,m=i.tokenSeparator,p=void 0===m?/ +/g:m,v=i.findAllMatches,g=void 0!==v&&v,b=i.minMatchCharLength,y=void 0===b?1:b;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.options={location:s,distance:a,threshold:c,maxPatternLength:h,isCaseSensitive:f,tokenSeparator:p,findAllMatches:g,minMatchCharLength:y},this.pattern=this.options.isCaseSensitive?t:t.toLowerCase(),this.pattern.length<=h&&(this.patternAlphabet=o(this.pattern))}var t;return(t=[{key:"search",value:function(e){if(this.options.isCaseSensitive||(e=e.toLowerCase()),this.pattern===e)return{isMatch:!0,score:0,matchedIndices:[[0,e.length-1]]};var t=this.options,i=t.maxPatternLength,o=t.tokenSeparator;if(this.pattern.length>i)return n(e,this.pattern,o);var r=this.options,a=r.location,l=r.distance,c=r.threshold,u=r.findAllMatches,h=r.minMatchCharLength;return s(e,this.pattern,this.patternAlphabet,{location:a,distance:l,threshold:c,findAllMatches:u,minMatchCharLength:h})}}])&&function(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}(e.prototype,t),e}();e.exports=r},function(e,t){var i=/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g;e.exports=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:/ +/g,s=new RegExp(t.replace(i,"\\$&").replace(n,"|")),o=e.match(s),r=!!o,a=[];if(r)for(var l=0,c=o.length;l<c;l+=1){var u=o[l];a.push([e.indexOf(u),u.length-1])}return{score:r?.5:1,isMatch:r,matchedIndices:a}}},function(e,t,i){var n=i(5),s=i(6);e.exports=function(e,t,i,o){for(var r=o.location,a=void 0===r?0:r,l=o.distance,c=void 0===l?100:l,u=o.threshold,h=void 0===u?.6:u,d=o.findAllMatches,f=void 0!==d&&d,m=o.minMatchCharLength,p=void 0===m?1:m,v=a,g=e.length,b=h,y=e.indexOf(t,v),_=t.length,E=[],S=0;S<g;S+=1)E[S]=0;if(-1!==y){var w=n(t,{errors:0,currentLocation:y,expectedLocation:v,distance:c});if(b=Math.min(w,b),-1!==(y=e.lastIndexOf(t,v+_))){var I=n(t,{errors:0,currentLocation:y,expectedLocation:v,distance:c});b=Math.min(I,b)}}y=-1;for(var O=[],C=1,L=_+g,T=1<<_-1,A=0;A<_;A+=1){for(var x=0,k=L;x<k;)n(t,{errors:A,currentLocation:v+k,expectedLocation:v,distance:c})<=b?x=k:L=k,k=Math.floor((L-x)/2+x);L=k;var P=Math.max(1,v-k+1),M=f?g:Math.min(v+k,g)+_,F=Array(M+2);F[M+1]=(1<<A)-1;for(var D=M;D>=P;D-=1){var j=D-1,N=i[e.charAt(j)];if(N&&(E[j]=1),F[D]=(F[D+1]<<1|1)&N,0!==A&&(F[D]|=(O[D+1]|O[D])<<1|1|O[D+1]),F[D]&T&&(C=n(t,{errors:A,currentLocation:j,expectedLocation:v,distance:c}))<=b){if(b=C,(y=j)<=v)break;P=Math.max(1,2*v-y)}}if(n(t,{errors:A+1,currentLocation:v,expectedLocation:v,distance:c})>b)break;O=F}return{isMatch:y>=0,score:0===C?.001:C,matchedIndices:s(E,p)}}},function(e,t){e.exports=function(e,t){var i=t.errors,n=void 0===i?0:i,s=t.currentLocation,o=void 0===s?0:s,r=t.expectedLocation,a=void 0===r?0:r,l=t.distance,c=void 0===l?100:l,u=n/e.length,h=Math.abs(a-o);return c?u+h/c:h?1:u}},function(e,t){e.exports=function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=[],n=-1,s=-1,o=0,r=e.length;o<r;o+=1){var a=e[o];a&&-1===n?n=o:a||-1===n||((s=o-1)-n+1>=t&&i.push([n,s]),n=-1)}return e[o-1]&&o-n>=t&&i.push([n,o-1]),i}},function(e,t){e.exports=function(e){for(var t={},i=e.length,n=0;n<i;n+=1)t[e.charAt(n)]=0;for(var s=0;s<i;s+=1)t[e.charAt(s)]|=1<<i-s-1;return t}},function(e,t,i){var n=i(0);e.exports=function(e,t){return function e(t,i,s){if(i){var o=i.indexOf("."),r=i,a=null;-1!==o&&(r=i.slice(0,o),a=i.slice(o+1));var l=t[r];if(null!=l)if(a||"string"!=typeof l&&"number"!=typeof l)if(n(l))for(var c=0,u=l.length;c<u;c+=1)e(l[c],a,s);else a&&e(l,a,s);else s.push(l.toString())}else s.push(t);return s}(e,t,[])}}])},function(e,t,i){function n(e){var t,i=e.Symbol;return"function"==typeof i?i.observable?t=i.observable:(t=i("observable"),i.observable=t):t="@@observable",t}i.d(t,"a",(function(){return n}))},function(e,t,i){e.exports=i(7)},function(t,i){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==("undefined"==typeof window?"undefined":e(window))&&(n=window)}t.exports=n},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(t,i,n){n.r(i);var s=n(2),o=n.n(s),r=n(0),a=n.n(r),l=n(1),c=function(){return Math.random().toString(36).substring(7).split("").join(".")},u={INIT:"@@redux/INIT"+c(),REPLACE:"@@redux/REPLACE"+c(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+c()}};function h(t){if("object"!=e(t)||null===t)return!1;for(var i=t;null!==Object.getPrototypeOf(i);)i=Object.getPrototypeOf(i);return Object.getPrototypeOf(t)===i}function d(t,i,n){var s;if("function"==typeof i&&"function"==typeof n||"function"==typeof n&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function.");if("function"==typeof i&&void 0===n&&(n=i,i=void 0),void 0!==n){if("function"!=typeof n)throw new Error("Expected the enhancer to be a function.");return n(d)(t,i)}if("function"!=typeof t)throw new Error("Expected the reducer to be a function.");var o=t,r=i,a=[],c=a,f=!1;function m(){c===a&&(c=a.slice())}function p(){if(f)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return r}function v(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(f)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");var t=!0;return m(),c.push(e),function(){if(t){if(f)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");t=!1,m();var i=c.indexOf(e);c.splice(i,1)}}}function g(e){if(!h(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(f)throw new Error("Reducers may not dispatch actions.");try{f=!0,r=o(r,e)}finally{f=!1}for(var t=a=c,i=0;i<t.length;i++)(0,t[i])();return e}return g({type:u.INIT}),(s={dispatch:g,subscribe:v,getState:p,replaceReducer:function(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");o=e,g({type:u.REPLACE})}})[l.a]=function(){var t,i=v;return(t={subscribe:function(t){if("object"!=e(t)||null===t)throw new TypeError("Expected the observer to be an object.");function n(){t.next&&t.next(p())}return n(),{unsubscribe:i(n)}}})[l.a]=function(){return this},t},s}function f(e,t){var i=t&&t.type;return"Given "+(i&&'action "'+String(i)+'"'||"an action")+', reducer "'+e+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}var m,p=[],v=[],g=[],b={loading:!1},y=function(e){return Array.from({length:e},(function(){return(0,36,Math.floor(36*Math.random()+0)).toString(36)})).join("")},_=function(e){return Object.prototype.toString.call(e).slice(8,-1)},E=function(e,t){return null!=t&&_(t)===e},S=function(e){return"string"!=typeof e?e:e.replace(/&/g,"&amp;").replace(/>/g,"&rt;").replace(/</g,"&lt;").replace(/"/g,"&quot;")},w=(m=document.createElement("div"),function(e){var t=e.trim();m.innerHTML=t;for(var i=m.children[0];m.firstChild;)m.removeChild(m.firstChild);return i}),I=function(e,t){return e.score-t.score},O=function(e){return JSON.parse(JSON.stringify(e))},C=function(e){for(var t=Object.keys(e),i={},n=0;n<t.length;n++){var s=t[n];"function"==typeof e[s]&&(i[s]=e[s])}var o,r=Object.keys(i);try{!function(e){Object.keys(e).forEach((function(t){var i=e[t];if(void 0===i(void 0,{type:u.INIT}))throw new Error('Reducer "'+t+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if(void 0===i(void 0,{type:u.PROBE_UNKNOWN_ACTION()}))throw new Error('Reducer "'+t+"\" returned undefined when probed with a random type. Don't try to handle "+u.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')}))}(i)}catch(e){o=e}return function(e,t){if(void 0===e&&(e={}),o)throw o;for(var n=!1,s={},a=0;a<r.length;a++){var l=r[a],c=i[l],u=e[l],h=c(u,t);if(void 0===h){var d=f(l,t);throw new Error(d)}s[l]=h,n=n||h!==u}return n?s:e}}({items:function(e,t){switch(void 0===e&&(e=p),t.type){case"ADD_ITEM":return[].concat(e,[{id:t.id,choiceId:t.choiceId,groupId:t.groupId,value:t.value,label:t.label,active:!0,highlighted:!1,customProperties:t.customProperties,placeholder:t.placeholder||!1,keyCode:null}]).map((function(e){var t=e;return t.highlighted=!1,t}));case"REMOVE_ITEM":return e.map((function(e){var i=e;return i.id===t.id&&(i.active=!1),i}));case"HIGHLIGHT_ITEM":return e.map((function(e){var i=e;return i.id===t.id&&(i.highlighted=t.highlighted),i}));default:return e}},groups:function(e,t){switch(void 0===e&&(e=v),t.type){case"ADD_GROUP":return[].concat(e,[{id:t.id,value:t.value,active:t.active,disabled:t.disabled}]);case"CLEAR_CHOICES":return[];default:return e}},choices:function(e,t){switch(void 0===e&&(e=g),t.type){case"ADD_CHOICE":return[].concat(e,[{id:t.id,elementId:t.elementId,groupId:t.groupId,value:t.value,label:t.label||t.value,disabled:t.disabled||!1,selected:!1,active:!0,score:9999,customProperties:t.customProperties,placeholder:t.placeholder||!1,keyCode:null}]);case"ADD_ITEM":return t.activateOptions?e.map((function(e){var i=e;return i.active=t.active,i})):t.choiceId>-1?e.map((function(e){var i=e;return i.id===parseInt(t.choiceId,10)&&(i.selected=!0),i})):e;case"REMOVE_ITEM":return t.choiceId>-1?e.map((function(e){var i=e;return i.id===parseInt(t.choiceId,10)&&(i.selected=!1),i})):e;case"FILTER_CHOICES":return e.map((function(e){var i=e;return i.active=t.results.some((function(e){var t=e.item,n=e.score;return t.id===i.id&&(i.score=n,!0)})),i}));case"ACTIVATE_CHOICES":return e.map((function(e){var i=e;return i.active=t.active,i}));case"CLEAR_CHOICES":return g;default:return e}},general:function(e,t){switch(void 0===e&&(e=b),t.type){case"SET_IS_LOADING":return{loading:t.isLoading};default:return e}}}),L=function(e,t){var i=e;if("CLEAR_ALL"===t.type)i=void 0;else if("RESET_TO"===t.type)return O(t.state);return C(i,t)};function T(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var A=function(){function e(){this._store=d(L,window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__())}var t,i,n=e.prototype;return n.subscribe=function(e){this._store.subscribe(e)},n.dispatch=function(e){this._store.dispatch(e)},n.isLoading=function(){return this.state.general.loading},n.getChoiceById=function(e){return this.activeChoices.find((function(t){return t.id===parseInt(e,10)}))},n.getGroupById=function(e){return this.groups.find((function(t){return t.id===e}))},t=e,(i=[{key:"state",get:function(){return this._store.getState()}},{key:"items",get:function(){return this.state.items}},{key:"activeItems",get:function(){return this.items.filter((function(e){return!0===e.active}))}},{key:"highlightedActiveItems",get:function(){return this.items.filter((function(e){return e.active&&e.highlighted}))}},{key:"choices",get:function(){return this.state.choices}},{key:"activeChoices",get:function(){return this.choices.filter((function(e){return!0===e.active}))}},{key:"selectableChoices",get:function(){return this.choices.filter((function(e){return!0!==e.disabled}))}},{key:"searchableChoices",get:function(){return this.selectableChoices.filter((function(e){return!0!==e.placeholder}))}},{key:"placeholderChoice",get:function(){return[].concat(this.choices).reverse().find((function(e){return!0===e.placeholder}))}},{key:"groups",get:function(){return this.state.groups}},{key:"activeGroups",get:function(){var e=this.groups,t=this.choices;return e.filter((function(e){var i=!0===e.active&&!1===e.disabled,n=t.some((function(e){return!0===e.active&&!1===e.disabled}));return i&&n}),[])}}])&&T(t.prototype,i),e}();function x(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var k=function(){function e(e){var t=e.element,i=e.type,n=e.classNames;this.element=t,this.classNames=n,this.type=i,this.isActive=!1}var t,i,n=e.prototype;return n.getChild=function(e){return this.element.querySelector(e)},n.show=function(){return this.element.classList.add(this.classNames.activeState),this.element.setAttribute("aria-expanded","true"),this.isActive=!0,this},n.hide=function(){return this.element.classList.remove(this.classNames.activeState),this.element.setAttribute("aria-expanded","false"),this.isActive=!1,this},t=e,(i=[{key:"distanceFromTopWindow",get:function(){return this.element.getBoundingClientRect().bottom}}])&&x(t.prototype,i),e}(),P={items:[],choices:[],silent:!1,renderChoiceLimit:-1,maxItemCount:-1,addItems:!0,addItemFilter:null,removeItems:!0,removeItemButton:!1,editItems:!1,duplicateItemsAllowed:!0,delimiter:",",paste:!0,searchEnabled:!0,searchChoices:!0,searchFloor:1,searchResultLimit:4,searchFields:["label","value"],position:"auto",resetScrollPosition:!0,shouldSort:!0,shouldSortItems:!1,sorter:function(e,t){var i=e.value,n=e.label,s=void 0===n?i:n,o=t.value,r=t.label,a=void 0===r?o:r;return s.localeCompare(a,[],{sensitivity:"base",ignorePunctuation:!0,numeric:!0})},placeholder:!0,placeholderValue:null,searchPlaceholderValue:null,prependValue:null,appendValue:null,renderSelectedChoices:"auto",loadingText:"Loading...",noResultsText:"No results found",noChoicesText:"No choices to choose from",itemSelectText:"Press to select",uniqueItemText:"Only unique values can be added",customAddItemText:"Only values matching specific conditions can be added",addItemText:function(e){return'Press Enter to add <b>"'+S(e)+'"</b>'},maxItemText:function(e){return"Only "+e+" values can be added"},valueComparer:function(e,t){return e===t},fuseOptions:{includeScore:!0},callbackOnInit:null,callbackOnCreateTemplates:null,classNames:{containerOuter:"choices",containerInner:"choices__inner",input:"choices__input",inputCloned:"choices__input--cloned",list:"choices__list",listItems:"choices__list--multiple",listSingle:"choices__list--single",listDropdown:"choices__list--dropdown",item:"choices__item",itemSelectable:"choices__item--selectable",itemDisabled:"choices__item--disabled",itemChoice:"choices__item--choice",placeholder:"choices__placeholder",group:"choices__group",groupHeading:"choices__heading",button:"choices__button",activeState:"is-active",focusState:"is-focused",openState:"is-open",disabledState:"is-disabled",highlightedState:"is-highlighted",selectedState:"is-selected",flippedState:"is-flipped",loadingState:"is-loading",noResults:"has-no-results",noChoices:"has-no-choices"}},M="removeItem",F="highlightItem",D="text",j="select-one",N="select-multiple",R=function(){function e(e){var t=e.element,i=e.type,n=e.classNames,s=e.position;this.element=t,this.classNames=n,this.type=i,this.position=s,this.isOpen=!1,this.isFlipped=!1,this.isFocussed=!1,this.isDisabled=!1,this.isLoading=!1,this._onFocus=this._onFocus.bind(this),this._onBlur=this._onBlur.bind(this)}var t=e.prototype;return t.addEventListeners=function(){this.element.addEventListener("focus",this._onFocus),this.element.addEventListener("blur",this._onBlur)},t.removeEventListeners=function(){this.element.removeEventListener("focus",this._onFocus),this.element.removeEventListener("blur",this._onBlur)},t.shouldFlip=function(e){if("number"!=typeof e)return!1;var t=!1;return"auto"===this.position?t=!window.matchMedia("(min-height: "+(e+1)+"px)").matches:"top"===this.position&&(t=!0),t},t.setActiveDescendant=function(e){this.element.setAttribute("aria-activedescendant",e)},t.removeActiveDescendant=function(){this.element.removeAttribute("aria-activedescendant")},t.open=function(e){this.element.classList.add(this.classNames.openState),this.element.setAttribute("aria-expanded","true"),this.isOpen=!0,this.shouldFlip(e)&&(this.element.classList.add(this.classNames.flippedState),this.isFlipped=!0)},t.close=function(){this.element.classList.remove(this.classNames.openState),this.element.setAttribute("aria-expanded","false"),this.removeActiveDescendant(),this.isOpen=!1,this.isFlipped&&(this.element.classList.remove(this.classNames.flippedState),this.isFlipped=!1)},t.focus=function(){this.isFocussed||this.element.focus()},t.addFocusState=function(){this.element.classList.add(this.classNames.focusState)},t.removeFocusState=function(){this.element.classList.remove(this.classNames.focusState)},t.enable=function(){this.element.classList.remove(this.classNames.disabledState),this.element.removeAttribute("aria-disabled"),this.type===j&&this.element.setAttribute("tabindex","0"),this.isDisabled=!1},t.disable=function(){this.element.classList.add(this.classNames.disabledState),this.element.setAttribute("aria-disabled","true"),this.type===j&&this.element.setAttribute("tabindex","-1"),this.isDisabled=!0},t.wrap=function(e){!function(e,t){void 0===t&&(t=document.createElement("div")),e.nextSibling?e.parentNode.insertBefore(t,e.nextSibling):e.parentNode.appendChild(t),t.appendChild(e)}(e,this.element)},t.unwrap=function(e){this.element.parentNode.insertBefore(e,this.element),this.element.parentNode.removeChild(this.element)},t.addLoadingState=function(){this.element.classList.add(this.classNames.loadingState),this.element.setAttribute("aria-busy","true"),this.isLoading=!0},t.removeLoadingState=function(){this.element.classList.remove(this.classNames.loadingState),this.element.removeAttribute("aria-busy"),this.isLoading=!1},t._onFocus=function(){this.isFocussed=!0},t._onBlur=function(){this.isFocussed=!1},e}();function B(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var H=function(){function e(e){var t=e.element,i=e.type,n=e.classNames,s=e.preventPaste;this.element=t,this.type=i,this.classNames=n,this.preventPaste=s,this.isFocussed=this.element===document.activeElement,this.isDisabled=t.disabled,this._onPaste=this._onPaste.bind(this),this._onInput=this._onInput.bind(this),this._onFocus=this._onFocus.bind(this),this._onBlur=this._onBlur.bind(this)}var t,i,n=e.prototype;return n.addEventListeners=function(){this.element.addEventListener("paste",this._onPaste),this.element.addEventListener("input",this._onInput,{passive:!0}),this.element.addEventListener("focus",this._onFocus,{passive:!0}),this.element.addEventListener("blur",this._onBlur,{passive:!0})},n.removeEventListeners=function(){this.element.removeEventListener("input",this._onInput,{passive:!0}),this.element.removeEventListener("paste",this._onPaste),this.element.removeEventListener("focus",this._onFocus,{passive:!0}),this.element.removeEventListener("blur",this._onBlur,{passive:!0})},n.enable=function(){this.element.removeAttribute("disabled"),this.isDisabled=!1},n.disable=function(){this.element.setAttribute("disabled",""),this.isDisabled=!0},n.focus=function(){this.isFocussed||this.element.focus()},n.blur=function(){this.isFocussed&&this.element.blur()},n.clear=function(e){return void 0===e&&(e=!0),this.element.value&&(this.element.value=""),e&&this.setWidth(),this},n.setWidth=function(){var e=this.element,t=e.style,i=e.value,n=e.placeholder;t.minWidth=n.length+1+"ch",t.width=i.length+1+"ch"},n.setActiveDescendant=function(e){this.element.setAttribute("aria-activedescendant",e)},n.removeActiveDescendant=function(){this.element.removeAttribute("aria-activedescendant")},n._onInput=function(){this.type!==j&&this.setWidth()},n._onPaste=function(e){this.preventPaste&&e.preventDefault()},n._onFocus=function(){this.isFocussed=!0},n._onBlur=function(){this.isFocussed=!1},t=e,(i=[{key:"placeholder",set:function(e){this.element.placeholder=e}},{key:"value",get:function(){return S(this.element.value)},set:function(e){this.element.value=e}}])&&B(t.prototype,i),e}(),q=function(){function e(e){var t=e.element;this.element=t,this.scrollPos=this.element.scrollTop,this.height=this.element.offsetHeight}var t=e.prototype;return t.clear=function(){this.element.innerHTML=""},t.append=function(e){this.element.appendChild(e)},t.getChild=function(e){return this.element.querySelector(e)},t.hasChildren=function(){return this.element.hasChildNodes()},t.scrollToTop=function(){this.element.scrollTop=0},t.scrollToChildElement=function(e,t){var i=this;if(e){var n=this.element.offsetHeight,s=this.element.scrollTop+n,o=e.offsetHeight,r=e.offsetTop+o,a=t>0?this.element.scrollTop+r-s:e.offsetTop;requestAnimationFrame((function(){i._animateScroll(a,t)}))}},t._scrollDown=function(e,t,i){var n=(i-e)/t,s=n>1?n:1;this.element.scrollTop=e+s},t._scrollUp=function(e,t,i){var n=(e-i)/t,s=n>1?n:1;this.element.scrollTop=e-s},t._animateScroll=function(e,t){var i=this,n=this.element.scrollTop,s=!1;t>0?(this._scrollDown(n,4,e),n<e&&(s=!0)):(this._scrollUp(n,4,e),n>e&&(s=!0)),s&&requestAnimationFrame((function(){i._animateScroll(e,t)}))},e}();function K(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var V=function(){function e(e){var t=e.element,i=e.classNames;if(this.element=t,this.classNames=i,!(t instanceof HTMLInputElement||t instanceof HTMLSelectElement))throw new TypeError("Invalid element passed");this.isDisabled=!1}var t,i,n=e.prototype;return n.conceal=function(){this.element.classList.add(this.classNames.input),this.element.hidden=!0,this.element.tabIndex=-1;var e=this.element.getAttribute("style");e&&this.element.setAttribute("data-choice-orig-style",e),this.element.setAttribute("data-choice","active")},n.reveal=function(){this.element.classList.remove(this.classNames.input),this.element.hidden=!1,this.element.removeAttribute("tabindex");var e=this.element.getAttribute("data-choice-orig-style");e?(this.element.removeAttribute("data-choice-orig-style"),this.element.setAttribute("style",e)):this.element.removeAttribute("style"),this.element.removeAttribute("data-choice"),this.element.value=this.element.value},n.enable=function(){this.element.removeAttribute("disabled"),this.element.disabled=!1,this.isDisabled=!1},n.disable=function(){this.element.setAttribute("disabled",""),this.element.disabled=!0,this.isDisabled=!0},n.triggerEvent=function(e,t){!function(e,t,i){void 0===i&&(i=null);var n=new CustomEvent(t,{detail:i,bubbles:!0,cancelable:!0});e.dispatchEvent(n)}(this.element,e,t)},t=e,(i=[{key:"isActive",get:function(){return"active"===this.element.dataset.choice}},{key:"dir",get:function(){return this.element.dir}},{key:"value",get:function(){return this.element.value},set:function(e){this.element.value=e}}])&&K(t.prototype,i),e}();function G(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var X=function(e){var t,i,n,s;function o(t){var i,n=t.element,s=t.classNames,o=t.delimiter;return(i=e.call(this,{element:n,classNames:s})||this).delimiter=o,i}return i=e,(t=o).prototype=Object.create(i.prototype),t.prototype.constructor=t,t.__proto__=i,n=o,(s=[{key:"value",get:function(){return this.element.value},set:function(e){var t=e.map((function(e){return e.value})).join(this.delimiter);this.element.setAttribute("value",t),this.element.value=t}}])&&G(n.prototype,s),o}(V);function W(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var z=function(e){var t,i,n,s;function o(t){var i,n=t.element,s=t.classNames,o=t.template;return(i=e.call(this,{element:n,classNames:s})||this).template=o,i}return i=e,(t=o).prototype=Object.create(i.prototype),t.prototype.constructor=t,t.__proto__=i,o.prototype.appendDocFragment=function(e){this.element.innerHTML="",this.element.appendChild(e)},n=o,(s=[{key:"placeholderOption",get:function(){return this.element.querySelector('option[value=""]')||this.element.querySelector("option[placeholder]")}},{key:"optionGroups",get:function(){return Array.from(this.element.getElementsByTagName("OPTGROUP"))}},{key:"options",get:function(){return Array.from(this.element.options)},set:function(e){var t=this,i=document.createDocumentFragment();e.forEach((function(e){return n=e,s=t.template(n),void i.appendChild(s);var n,s})),this.appendDocFragment(i)}}])&&W(n.prototype,s),o}(V),U={containerOuter:function(e,t,i,n,s,o){var r=e.containerOuter,a=Object.assign(document.createElement("div"),{className:r});return a.dataset.type=o,t&&(a.dir=t),n&&(a.tabIndex=0),i&&(a.setAttribute("role",s?"combobox":"listbox"),s&&a.setAttribute("aria-autocomplete","list")),a.setAttribute("aria-haspopup","true"),a.setAttribute("aria-expanded","false"),a},containerInner:function(e){var t=e.containerInner;return Object.assign(document.createElement("div"),{className:t})},itemList:function(e,t){var i=e.list,n=e.listSingle,s=e.listItems;return Object.assign(document.createElement("div"),{className:i+" "+(t?n:s)})},placeholder:function(e,t){var i=e.placeholder;return Object.assign(document.createElement("div"),{className:i,innerHTML:t})},item:function(e,t,i){var n=e.item,s=e.button,o=e.highlightedState,r=e.itemSelectable,a=e.placeholder,l=t.id,c=t.value,u=t.label,h=t.customProperties,d=t.active,f=t.disabled,m=t.highlighted,p=t.placeholder,v=Object.assign(document.createElement("div"),{className:n,innerHTML:u});if(Object.assign(v.dataset,{item:"",id:l,value:c,customProperties:h}),d&&v.setAttribute("aria-selected","true"),f&&v.setAttribute("aria-disabled","true"),p&&v.classList.add(a),v.classList.add(m?o:r),i){f&&v.classList.remove(r),v.dataset.deletable="";var g=Object.assign(document.createElement("button"),{type:"button",className:s,innerHTML:"Remove item"});g.setAttribute("aria-label","Remove item: '"+c+"'"),g.dataset.button="",v.appendChild(g)}return v},choiceList:function(e,t){var i=e.list,n=Object.assign(document.createElement("div"),{className:i});return t||n.setAttribute("aria-multiselectable","true"),n.setAttribute("role","listbox"),n},choiceGroup:function(e,t){var i=e.group,n=e.groupHeading,s=e.itemDisabled,o=t.id,r=t.value,a=t.disabled,l=Object.assign(document.createElement("div"),{className:i+" "+(a?s:"")});return l.setAttribute("role","group"),Object.assign(l.dataset,{group:"",id:o,value:r}),a&&l.setAttribute("aria-disabled","true"),l.appendChild(Object.assign(document.createElement("div"),{className:n,innerHTML:r})),l},choice:function(e,t,i){var n=e.item,s=e.itemChoice,o=e.itemSelectable,r=e.selectedState,a=e.itemDisabled,l=e.placeholder,c=t.id,u=t.value,h=t.label,d=t.groupId,f=t.elementId,m=t.disabled,p=t.selected,v=t.placeholder,g=Object.assign(document.createElement("div"),{id:f,innerHTML:h,className:n+" "+s});return p&&g.classList.add(r),v&&g.classList.add(l),g.setAttribute("role",d>0?"treeitem":"option"),Object.assign(g.dataset,{choice:"",id:c,value:u,selectText:i}),m?(g.classList.add(a),g.dataset.choiceDisabled="",g.setAttribute("aria-disabled","true")):(g.classList.add(o),g.dataset.choiceSelectable=""),g},input:function(e,t){var i=e.input,n=e.inputCloned,s=Object.assign(document.createElement("input"),{type:"text",className:i+" "+n,autocomplete:"off",autocapitalize:"off",spellcheck:!1});return s.setAttribute("role","textbox"),s.setAttribute("aria-autocomplete","list"),s.setAttribute("aria-label",t),s},dropdown:function(e){var t=e.list,i=e.listDropdown,n=document.createElement("div");return n.classList.add(t,i),n.setAttribute("aria-expanded","false"),n},notice:function(e,t,i){var n=e.item,s=e.itemChoice,o=e.noResults,r=e.noChoices;void 0===i&&(i="");var a=[n,s];return"no-choices"===i?a.push(r):"no-results"===i&&a.push(o),Object.assign(document.createElement("div"),{innerHTML:t,className:a.join(" ")})},option:function(e){var t=e.label,i=e.value,n=e.customProperties,s=e.active,o=e.disabled,r=new Option(t,i,!1,s);return n&&(r.dataset.customProperties=n),r.disabled=o,r}},Y=function(e){return void 0===e&&(e=!0),{type:"ACTIVATE_CHOICES",active:e}},$=function(e,t){return{type:"HIGHLIGHT_ITEM",id:e,highlighted:t}},Z=function(e){return{type:"ADD_GROUP",value:e.value,id:e.id,active:e.active,disabled:e.disabled}},J=function(e){return{type:"SET_IS_LOADING",isLoading:e}};function Q(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var ee="-ms-scroll-limit"in document.documentElement.style&&"-ms-ime-align"in document.documentElement.style,te={},ie=function(){var t,i;function n(e,t){var i=this;void 0===e&&(e="[data-choice]"),void 0===t&&(t={}),this.config=a.a.all([P,n.defaults.options,t],{arrayMerge:function(e,t){return[].concat(t)}});var s=function(e,t){var i=Object.keys(e).sort(),n=Object.keys(t).sort();return i.filter((function(e){return n.indexOf(e)<0}))}(this.config,P);s.length&&console.warn("Unknown config option(s) passed",s.join(", "));var o="string"==typeof e?document.querySelector(e):e;if(!(o instanceof HTMLInputElement||o instanceof HTMLSelectElement))throw TypeError("Expected one of the following types text|select-one|select-multiple");if(this._isTextElement=o.type===D,this._isSelectOneElement=o.type===j,this._isSelectMultipleElement=o.type===N,this._isSelectElement=this._isSelectOneElement||this._isSelectMultipleElement,this.config.searchEnabled=this._isSelectMultipleElement||this.config.searchEnabled,["auto","always"].includes(this.config.renderSelectedChoices)||(this.config.renderSelectedChoices="auto"),t.addItemFilter&&"function"!=typeof t.addItemFilter){var r=t.addItemFilter instanceof RegExp?t.addItemFilter:new RegExp(t.addItemFilter);this.config.addItemFilter=r.test.bind(r)}if(this._isTextElement?this.passedElement=new X({element:o,classNames:this.config.classNames,delimiter:this.config.delimiter}):this.passedElement=new z({element:o,classNames:this.config.classNames,template:function(e){return i._templates.option(e)}}),this.initialised=!1,this._store=new A,this._initialState={},this._currentState={},this._prevState={},this._currentValue="",this._canSearch=this.config.searchEnabled,this._isScrollingOnIe=!1,this._highlightPosition=0,this._wasTap=!0,this._placeholderValue=this._generatePlaceholderValue(),this._baseId=function(e,t){var i=e.id||e.name&&e.name+"-"+y(2)||y(4);return t+"-"+i.replace(/(:|\.|\[|\]|,)/g,"")}(this.passedElement.element,"choices-"),this._direction=this.passedElement.dir,!this._direction){var l=window.getComputedStyle(this.passedElement.element).direction;l!==window.getComputedStyle(document.documentElement).direction&&(this._direction=l)}if(this._idNames={itemChoice:"item-choice"},this._presetGroups=this.passedElement.optionGroups,this._presetOptions=this.passedElement.options,this._presetChoices=this.config.choices,this._presetItems=this.config.items,this.passedElement.value&&(this._presetItems=this._presetItems.concat(this.passedElement.value.split(this.config.delimiter))),this.passedElement.options&&this.passedElement.options.forEach((function(e){i._presetChoices.push({value:e.value,label:e.innerHTML,selected:e.selected,disabled:e.disabled||e.parentNode.disabled,placeholder:""===e.value||e.hasAttribute("placeholder"),customProperties:e.getAttribute("data-custom-properties")})})),this._render=this._render.bind(this),this._onFocus=this._onFocus.bind(this),this._onBlur=this._onBlur.bind(this),this._onKeyUp=this._onKeyUp.bind(this),this._onKeyDown=this._onKeyDown.bind(this),this._onClick=this._onClick.bind(this),this._onTouchMove=this._onTouchMove.bind(this),this._onTouchEnd=this._onTouchEnd.bind(this),this._onMouseDown=this._onMouseDown.bind(this),this._onMouseOver=this._onMouseOver.bind(this),this._onFormReset=this._onFormReset.bind(this),this._onAKey=this._onAKey.bind(this),this._onEnterKey=this._onEnterKey.bind(this),this._onEscapeKey=this._onEscapeKey.bind(this),this._onDirectionKey=this._onDirectionKey.bind(this),this._onDeleteKey=this._onDeleteKey.bind(this),this.passedElement.isActive)return this.config.silent||console.warn("Trying to initialise Choices on element already initialised"),void(this.initialised=!0);this.init()}t=n,i=[{key:"defaults",get:function(){return Object.preventExtensions({get options(){return te},get templates(){return U}})}}],null&&Q(t.prototype,null),i&&Q(t,i);var s=n.prototype;return s.init=function(){if(!this.initialised){this._createTemplates(),this._createElements(),this._createStructure(),this._initialState=O(this._store.state),this._store.subscribe(this._render),this._render(),this._addEventListeners(),(!this.config.addItems||this.passedElement.element.hasAttribute("disabled"))&&this.disable(),this.initialised=!0;var e=this.config.callbackOnInit;e&&"function"==typeof e&&e.call(this)}},s.destroy=function(){this.initialised&&(this._removeEventListeners(),this.passedElement.reveal(),this.containerOuter.unwrap(this.passedElement.element),this.clearStore(),this._isSelectElement&&(this.passedElement.options=this._presetOptions),this._templates=null,this.initialised=!1)},s.enable=function(){return this.passedElement.isDisabled&&this.passedElement.enable(),this.containerOuter.isDisabled&&(this._addEventListeners(),this.input.enable(),this.containerOuter.enable()),this},s.disable=function(){return this.passedElement.isDisabled||this.passedElement.disable(),this.containerOuter.isDisabled||(this._removeEventListeners(),this.input.disable(),this.containerOuter.disable()),this},s.highlightItem=function(e,t){if(void 0===t&&(t=!0),!e)return this;var i=e.id,n=e.groupId,s=void 0===n?-1:n,o=e.value,r=void 0===o?"":o,a=e.label,l=void 0===a?"":a,c=s>=0?this._store.getGroupById(s):null;return this._store.dispatch($(i,!0)),t&&this.passedElement.triggerEvent(F,{id:i,value:r,label:l,groupValue:c&&c.value?c.value:null}),this},s.unhighlightItem=function(e){if(!e)return this;var t=e.id,i=e.groupId,n=void 0===i?-1:i,s=e.value,o=void 0===s?"":s,r=e.label,a=void 0===r?"":r,l=n>=0?this._store.getGroupById(n):null;return this._store.dispatch($(t,!1)),this.passedElement.triggerEvent(F,{id:t,value:o,label:a,groupValue:l&&l.value?l.value:null}),this},s.highlightAll=function(){var e=this;return this._store.items.forEach((function(t){return e.highlightItem(t)})),this},s.unhighlightAll=function(){var e=this;return this._store.items.forEach((function(t){return e.unhighlightItem(t)})),this},s.removeActiveItemsByValue=function(e){var t=this;return this._store.activeItems.filter((function(t){return t.value===e})).forEach((function(e){return t._removeItem(e)})),this},s.removeActiveItems=function(e){var t=this;return this._store.activeItems.filter((function(t){return t.id!==e})).forEach((function(e){return t._removeItem(e)})),this},s.removeHighlightedItems=function(e){var t=this;return void 0===e&&(e=!1),this._store.highlightedActiveItems.forEach((function(i){t._removeItem(i),e&&t._triggerChange(i.value)})),this},s.showDropdown=function(e){var t=this;return this.dropdown.isActive||requestAnimationFrame((function(){t.dropdown.show(),t.containerOuter.open(t.dropdown.distanceFromTopWindow),!e&&t._canSearch&&t.input.focus(),t.passedElement.triggerEvent("showDropdown",{})})),this},s.hideDropdown=function(e){var t=this;return this.dropdown.isActive?(requestAnimationFrame((function(){t.dropdown.hide(),t.containerOuter.close(),!e&&t._canSearch&&(t.input.removeActiveDescendant(),t.input.blur()),t.passedElement.triggerEvent("hideDropdown",{})})),this):this},s.getValue=function(e){void 0===e&&(e=!1);var t=this._store.activeItems.reduce((function(t,i){var n=e?i.value:i;return t.push(n),t}),[]);return this._isSelectOneElement?t[0]:t},s.setValue=function(e){var t=this;return this.initialised?(e.forEach((function(e){return t._setChoiceOrItem(e)})),this):this},s.setChoiceByValue=function(e){var t=this;return!this.initialised||this._isTextElement||(Array.isArray(e)?e:[e]).forEach((function(e){return t._findAndSelectChoiceByValue(e)})),this},s.setChoices=function(t,i,n,s){var o=this;if(void 0===t&&(t=[]),void 0===i&&(i="value"),void 0===n&&(n="label"),void 0===s&&(s=!1),!this.initialised)throw new ReferenceError("setChoices was called on a non-initialized instance of Choices");if(!this._isSelectElement)throw new TypeError("setChoices can't be used with INPUT based Choices");if("string"!=typeof i||!i)throw new TypeError("value parameter must be a name of 'value' field in passed objects");if(s&&this.clearChoices(),"function"==typeof t){var r=t(this);if("function"==typeof Promise&&r instanceof Promise)return new Promise((function(e){return requestAnimationFrame(e)})).then((function(){return o._handleLoadingState(!0)})).then((function(){return r})).then((function(e){return o.setChoices(e,i,n,s)})).catch((function(e){o.config.silent||console.error(e)})).then((function(){return o._handleLoadingState(!1)})).then((function(){return o}));if(!Array.isArray(r))throw new TypeError(".setChoices first argument function must return either array of choices or Promise, got: "+e(r));return this.setChoices(r,i,n,!1)}if(!Array.isArray(t))throw new TypeError(".setChoices must be called either with array of choices with a function resulting into Promise of array of choices");return this.containerOuter.removeLoadingState(),this._startLoading(),t.forEach((function(e){e.choices?o._addGroup({id:parseInt(e.id,10)||null,group:e,valueKey:i,labelKey:n}):o._addChoice({value:e[i],label:e[n],isSelected:e.selected,isDisabled:e.disabled,customProperties:e.customProperties,placeholder:e.placeholder})})),this._stopLoading(),this},s.clearChoices=function(){return this._store.dispatch({type:"CLEAR_CHOICES"}),this},s.clearStore=function(){return this._store.dispatch({type:"CLEAR_ALL"}),this},s.clearInput=function(){var e=!this._isSelectOneElement;return this.input.clear(e),!this._isTextElement&&this._canSearch&&(this._isSearching=!1,this._store.dispatch(Y(!0))),this},s._render=function(){if(!this._store.isLoading()){this._currentState=this._store.state;var e=this._currentState.choices!==this._prevState.choices||this._currentState.groups!==this._prevState.groups||this._currentState.items!==this._prevState.items,t=this._isSelectElement,i=this._currentState.items!==this._prevState.items;e&&(t&&this._renderChoices(),i&&this._renderItems(),this._prevState=this._currentState)}},s._renderChoices=function(){var e=this,t=this._store,i=t.activeGroups,n=t.activeChoices,s=document.createDocumentFragment();if(this.choiceList.clear(),this.config.resetScrollPosition&&requestAnimationFrame((function(){return e.choiceList.scrollToTop()})),i.length>=1&&!this._isSearching){var o=n.filter((function(e){return!0===e.placeholder&&-1===e.groupId}));o.length>=1&&(s=this._createChoicesFragment(o,s)),s=this._createGroupsFragment(i,n,s)}else n.length>=1&&(s=this._createChoicesFragment(n,s));if(s.childNodes&&s.childNodes.length>0){var r=this._store.activeItems,a=this._canAddItem(r,this.input.value);a.response?(this.choiceList.append(s),this._highlightChoice()):this.choiceList.append(this._getTemplate("notice",a.notice))}else{var l,c;this._isSearching?(c="function"==typeof this.config.noResultsText?this.config.noResultsText():this.config.noResultsText,l=this._getTemplate("notice",c,"no-results")):(c="function"==typeof this.config.noChoicesText?this.config.noChoicesText():this.config.noChoicesText,l=this._getTemplate("notice",c,"no-choices")),this.choiceList.append(l)}},s._renderItems=function(){var e=this._store.activeItems||[];this.itemList.clear();var t=this._createItemsFragment(e);t.childNodes&&this.itemList.append(t)},s._createGroupsFragment=function(e,t,i){var n=this;return void 0===i&&(i=document.createDocumentFragment()),this.config.shouldSort&&e.sort(this.config.sorter),e.forEach((function(e){var s=function(e){return t.filter((function(t){return n._isSelectOneElement?t.groupId===e.id:t.groupId===e.id&&("always"===n.config.renderSelectedChoices||!t.selected)}))}(e);if(s.length>=1){var o=n._getTemplate("choiceGroup",e);i.appendChild(o),n._createChoicesFragment(s,i,!0)}})),i},s._createChoicesFragment=function(e,t,i){var n=this;void 0===t&&(t=document.createDocumentFragment()),void 0===i&&(i=!1);var s=this.config,o=s.renderSelectedChoices,r=s.searchResultLimit,a=s.renderChoiceLimit,l=this._isSearching?I:this.config.sorter,c=function(e){if("auto"!==o||n._isSelectOneElement||!e.selected){var i=n._getTemplate("choice",e,n.config.itemSelectText);t.appendChild(i)}},u=e;"auto"!==o||this._isSelectOneElement||(u=e.filter((function(e){return!e.selected})));var h=u.reduce((function(e,t){return t.placeholder?e.placeholderChoices.push(t):e.normalChoices.push(t),e}),{placeholderChoices:[],normalChoices:[]}),d=h.placeholderChoices,f=h.normalChoices;(this.config.shouldSort||this._isSearching)&&f.sort(l);var m=u.length,p=this._isSelectOneElement?[].concat(d,f):f;this._isSearching?m=r:a&&a>0&&!i&&(m=a);for(var v=0;v<m;v+=1)p[v]&&c(p[v]);return t},s._createItemsFragment=function(e,t){var i=this;void 0===t&&(t=document.createDocumentFragment());var n=this.config,s=n.shouldSortItems,o=n.sorter,r=n.removeItemButton;return s&&!this._isSelectOneElement&&e.sort(o),this._isTextElement?this.passedElement.value=e:this.passedElement.options=e,e.forEach((function(e){var n=i._getTemplate("item",e,r);t.appendChild(n)})),t},s._triggerChange=function(e){null!=e&&this.passedElement.triggerEvent("change",{value:e})},s._selectPlaceholderChoice=function(){var e=this._store.placeholderChoice;e&&(this._addItem({value:e.value,label:e.label,choiceId:e.id,groupId:e.groupId,placeholder:e.placeholder}),this._triggerChange(e.value))},s._handleButtonAction=function(e,t){if(e&&t&&this.config.removeItems&&this.config.removeItemButton){var i=t.parentNode.getAttribute("data-id"),n=e.find((function(e){return e.id===parseInt(i,10)}));this._removeItem(n),this._triggerChange(n.value),this._isSelectOneElement&&this._selectPlaceholderChoice()}},s._handleItemAction=function(e,t,i){var n=this;if(void 0===i&&(i=!1),e&&t&&this.config.removeItems&&!this._isSelectOneElement){var s=t.getAttribute("data-id");e.forEach((function(e){e.id!==parseInt(s,10)||e.highlighted?!i&&e.highlighted&&n.unhighlightItem(e):n.highlightItem(e)})),this.input.focus()}},s._handleChoiceAction=function(e,t){if(e&&t){var i=t.dataset.id,n=this._store.getChoiceById(i);if(n){var s=e[0]&&e[0].keyCode?e[0].keyCode:null,o=this.dropdown.isActive;n.keyCode=s,this.passedElement.triggerEvent("choice",{choice:n}),n.selected||n.disabled||this._canAddItem(e,n.value).response&&(this._addItem({value:n.value,label:n.label,choiceId:n.id,groupId:n.groupId,customProperties:n.customProperties,placeholder:n.placeholder,keyCode:n.keyCode}),this._triggerChange(n.value)),this.clearInput(),o&&this._isSelectOneElement&&(this.hideDropdown(!0),this.containerOuter.focus())}}},s._handleBackspace=function(e){if(this.config.removeItems&&e){var t=e[e.length-1],i=e.some((function(e){return e.highlighted}));this.config.editItems&&!i&&t?(this.input.value=t.value,this.input.setWidth(),this._removeItem(t),this._triggerChange(t.value)):(i||this.highlightItem(t,!1),this.removeHighlightedItems(!0))}},s._startLoading=function(){this._store.dispatch(J(!0))},s._stopLoading=function(){this._store.dispatch(J(!1))},s._handleLoadingState=function(e){void 0===e&&(e=!0);var t=this.itemList.getChild("."+this.config.classNames.placeholder);e?(this.disable(),this.containerOuter.addLoadingState(),this._isSelectOneElement?t?t.innerHTML=this.config.loadingText:(t=this._getTemplate("placeholder",this.config.loadingText),this.itemList.append(t)):this.input.placeholder=this.config.loadingText):(this.enable(),this.containerOuter.removeLoadingState(),this._isSelectOneElement?t.innerHTML=this._placeholderValue||"":this.input.placeholder=this._placeholderValue||"")},s._handleSearch=function(e){if(e&&this.input.isFocussed){var t=this._store.choices,i=this.config,n=i.searchFloor,s=i.searchChoices,o=t.some((function(e){return!e.active}));if(e&&e.length>=n){var r=s?this._searchChoices(e):0;this.passedElement.triggerEvent("search",{value:e,resultCount:r})}else o&&(this._isSearching=!1,this._store.dispatch(Y(!0)))}},s._canAddItem=function(e,t){var i=!0,n="function"==typeof this.config.addItemText?this.config.addItemText(t):this.config.addItemText;if(!this._isSelectOneElement){var s=function(e,t,i){return void 0===i&&(i="value"),e.some((function(e){return"string"==typeof t?e[i]===t.trim():e[i]===t}))}(e,t);this.config.maxItemCount>0&&this.config.maxItemCount<=e.length&&(i=!1,n="function"==typeof this.config.maxItemText?this.config.maxItemText(this.config.maxItemCount):this.config.maxItemText),!this.config.duplicateItemsAllowed&&s&&i&&(i=!1,n="function"==typeof this.config.uniqueItemText?this.config.uniqueItemText(t):this.config.uniqueItemText),this._isTextElement&&this.config.addItems&&i&&"function"==typeof this.config.addItemFilter&&!this.config.addItemFilter(t)&&(i=!1,n="function"==typeof this.config.customAddItemText?this.config.customAddItemText(t):this.config.customAddItemText)}return{response:i,notice:n}},s._searchChoices=function(e){var t="string"==typeof e?e.trim():e,i="string"==typeof this._currentValue?this._currentValue.trim():this._currentValue;if(t.length<1&&t===i+" ")return 0;var n=this._store.searchableChoices,s=t,r=[].concat(this.config.searchFields),a=Object.assign(this.config.fuseOptions,{keys:r}),l=new o.a(n,a).search(s);return this._currentValue=t,this._highlightPosition=0,this._isSearching=!0,this._store.dispatch(function(e){return{type:"FILTER_CHOICES",results:e}}(l)),l.length},s._addEventListeners=function(){var e=document.documentElement;e.addEventListener("touchend",this._onTouchEnd,!0),this.containerOuter.element.addEventListener("keydown",this._onKeyDown,!0),this.containerOuter.element.addEventListener("mousedown",this._onMouseDown,!0),e.addEventListener("click",this._onClick,{passive:!0}),e.addEventListener("touchmove",this._onTouchMove,{passive:!0}),this.dropdown.element.addEventListener("mouseover",this._onMouseOver,{passive:!0}),this._isSelectOneElement&&(this.containerOuter.element.addEventListener("focus",this._onFocus,{passive:!0}),this.containerOuter.element.addEventListener("blur",this._onBlur,{passive:!0})),this.input.element.addEventListener("keyup",this._onKeyUp,{passive:!0}),this.input.element.addEventListener("focus",this._onFocus,{passive:!0}),this.input.element.addEventListener("blur",this._onBlur,{passive:!0}),this.input.element.form&&this.input.element.form.addEventListener("reset",this._onFormReset,{passive:!0}),this.input.addEventListeners()},s._removeEventListeners=function(){var e=document.documentElement;e.removeEventListener("touchend",this._onTouchEnd,!0),this.containerOuter.element.removeEventListener("keydown",this._onKeyDown,!0),this.containerOuter.element.removeEventListener("mousedown",this._onMouseDown,!0),e.removeEventListener("click",this._onClick),e.removeEventListener("touchmove",this._onTouchMove),this.dropdown.element.removeEventListener("mouseover",this._onMouseOver),this._isSelectOneElement&&(this.containerOuter.element.removeEventListener("focus",this._onFocus),this.containerOuter.element.removeEventListener("blur",this._onBlur)),this.input.element.removeEventListener("keyup",this._onKeyUp),this.input.element.removeEventListener("focus",this._onFocus),this.input.element.removeEventListener("blur",this._onBlur),this.input.element.form&&this.input.element.form.removeEventListener("reset",this._onFormReset),this.input.removeEventListeners()},s._onKeyDown=function(e){var t,i=e.target,n=e.keyCode,s=e.ctrlKey,o=e.metaKey,r=this._store.activeItems,a=this.input.isFocussed,l=this.dropdown.isActive,c=this.itemList.hasChildren(),u=String.fromCharCode(n),h=s||o;!this._isTextElement&&/[a-zA-Z0-9-_ ]/.test(u)&&this.showDropdown();var d=((t={})[65]=this._onAKey,t[13]=this._onEnterKey,t[27]=this._onEscapeKey,t[38]=this._onDirectionKey,t[33]=this._onDirectionKey,t[40]=this._onDirectionKey,t[34]=this._onDirectionKey,t[8]=this._onDeleteKey,t[46]=this._onDeleteKey,t);d[n]&&d[n]({event:e,target:i,keyCode:n,metaKey:o,activeItems:r,hasFocusedInput:a,hasActiveDropdown:l,hasItems:c,hasCtrlDownKeyPressed:h})},s._onKeyUp=function(e){var t=e.target,i=e.keyCode,n=this.input.value,s=this._store.activeItems,o=this._canAddItem(s,n);if(this._isTextElement)if(o.notice&&n){var r=this._getTemplate("notice",o.notice);this.dropdown.element.innerHTML=r.outerHTML,this.showDropdown(!0)}else this.hideDropdown(!0);else{var a=(46===i||8===i)&&!t.value,l=!this._isTextElement&&this._isSearching,c=this._canSearch&&o.response;a&&l?(this._isSearching=!1,this._store.dispatch(Y(!0))):c&&this._handleSearch(this.input.value)}this._canSearch=this.config.searchEnabled},s._onAKey=function(e){var t=e.hasItems;e.hasCtrlDownKeyPressed&&t&&(this._canSearch=!1,this.config.removeItems&&!this.input.value&&this.input.element===document.activeElement&&this.highlightAll())},s._onEnterKey=function(e){var t=e.event,i=e.target,n=e.activeItems,s=e.hasActiveDropdown,o=i.hasAttribute("data-button");if(this._isTextElement&&i.value){var r=this.input.value;this._canAddItem(n,r).response&&(this.hideDropdown(!0),this._addItem({value:r}),this._triggerChange(r),this.clearInput())}if(o&&(this._handleButtonAction(n,i),t.preventDefault()),s){var a=this.dropdown.getChild("."+this.config.classNames.highlightedState);a&&(n[0]&&(n[0].keyCode=13),this._handleChoiceAction(n,a)),t.preventDefault()}else this._isSelectOneElement&&(this.showDropdown(),t.preventDefault())},s._onEscapeKey=function(e){e.hasActiveDropdown&&(this.hideDropdown(!0),this.containerOuter.focus())},s._onDirectionKey=function(e){var t,i,n,s=e.event,o=e.hasActiveDropdown,r=e.keyCode,a=e.metaKey;if(o||this._isSelectOneElement){this.showDropdown(),this._canSearch=!1;var l,c=40===r||34===r?1:-1;if(a||34===r||33===r)l=c>0?this.dropdown.element.querySelector("[data-choice-selectable]:last-of-type"):this.dropdown.element.querySelector("[data-choice-selectable]");else{var u=this.dropdown.element.querySelector("."+this.config.classNames.highlightedState);l=u?function(e,t,i){if(void 0===i&&(i=1),e instanceof Element){for(var n=(i>0?"next":"previous")+"ElementSibling",s=e[n];s;){if(s.matches(t))return s;s=s[n]}return s}}(u,"[data-choice-selectable]",c):this.dropdown.element.querySelector("[data-choice-selectable]")}l&&(t=l,i=this.choiceList.element,void 0===(n=c)&&(n=1),t&&(n>0?i.scrollTop+i.offsetHeight>=t.offsetTop+t.offsetHeight:t.offsetTop>=i.scrollTop)||this.choiceList.scrollToChildElement(l,c),this._highlightChoice(l)),s.preventDefault()}},s._onDeleteKey=function(e){var t=e.event,i=e.target,n=e.hasFocusedInput,s=e.activeItems;!n||i.value||this._isSelectOneElement||(this._handleBackspace(s),t.preventDefault())},s._onTouchMove=function(){this._wasTap&&(this._wasTap=!1)},s._onTouchEnd=function(e){var t=(e||e.touches[0]).target;this._wasTap&&this.containerOuter.element.contains(t)&&((t===this.containerOuter.element||t===this.containerInner.element)&&(this._isTextElement?this.input.focus():this._isSelectMultipleElement&&this.showDropdown()),e.stopPropagation()),this._wasTap=!0},s._onMouseDown=function(e){var t=e.target;if(t instanceof HTMLElement){if(ee&&this.choiceList.element.contains(t)){var i=this.choiceList.element.firstElementChild,n="ltr"===this._direction?e.offsetX>=i.offsetWidth:e.offsetX<i.offsetLeft;this._isScrollingOnIe=n}if(t!==this.input.element){var s=t.closest("[data-button],[data-item],[data-choice]");if(s instanceof HTMLElement){var o=e.shiftKey,r=this._store.activeItems,a=s.dataset;"button"in a?this._handleButtonAction(r,s):"item"in a?this._handleItemAction(r,s,o):"choice"in a&&this._handleChoiceAction(r,s)}e.preventDefault()}}},s._onMouseOver=function(e){var t=e.target;t instanceof HTMLElement&&"choice"in t.dataset&&this._highlightChoice(t)},s._onClick=function(e){var t=e.target;this.containerOuter.element.contains(t)?this.dropdown.isActive||this.containerOuter.isDisabled?this._isSelectOneElement&&t!==this.input.element&&!this.dropdown.element.contains(t)&&this.hideDropdown():this._isTextElement?document.activeElement!==this.input.element&&this.input.focus():(this.showDropdown(),this.containerOuter.focus()):(this._store.highlightedActiveItems.length>0&&this.unhighlightAll(),this.containerOuter.removeFocusState(),this.hideDropdown(!0))},s._onFocus=function(e){var t,i=this,n=e.target;this.containerOuter.element.contains(n)&&((t={})[D]=function(){n===i.input.element&&i.containerOuter.addFocusState()},t[j]=function(){i.containerOuter.addFocusState(),n===i.input.element&&i.showDropdown(!0)},t[N]=function(){n===i.input.element&&(i.showDropdown(!0),i.containerOuter.addFocusState())},t)[this.passedElement.element.type]()},s._onBlur=function(e){var t=this,i=e.target;if(this.containerOuter.element.contains(i)&&!this._isScrollingOnIe){var n,s=this._store.activeItems.some((function(e){return e.highlighted}));((n={})[D]=function(){i===t.input.element&&(t.containerOuter.removeFocusState(),s&&t.unhighlightAll(),t.hideDropdown(!0))},n[j]=function(){t.containerOuter.removeFocusState(),(i===t.input.element||i===t.containerOuter.element&&!t._canSearch)&&t.hideDropdown(!0)},n[N]=function(){i===t.input.element&&(t.containerOuter.removeFocusState(),t.hideDropdown(!0),s&&t.unhighlightAll())},n)[this.passedElement.element.type]()}else this._isScrollingOnIe=!1,this.input.element.focus()},s._onFormReset=function(){this._store.dispatch({type:"RESET_TO",state:this._initialState})},s._highlightChoice=function(e){var t=this;void 0===e&&(e=null);var i=Array.from(this.dropdown.element.querySelectorAll("[data-choice-selectable]"));if(i.length){var n=e;Array.from(this.dropdown.element.querySelectorAll("."+this.config.classNames.highlightedState)).forEach((function(e){e.classList.remove(t.config.classNames.highlightedState),e.setAttribute("aria-selected","false")})),n?this._highlightPosition=i.indexOf(n):(n=i.length>this._highlightPosition?i[this._highlightPosition]:i[i.length-1])||(n=i[0]),n.classList.add(this.config.classNames.highlightedState),n.setAttribute("aria-selected","true"),this.passedElement.triggerEvent("highlightChoice",{el:n}),this.dropdown.isActive&&(this.input.setActiveDescendant(n.id),this.containerOuter.setActiveDescendant(n.id))}},s._addItem=function(e){var t=e.value,i=e.label,n=void 0===i?null:i,s=e.choiceId,o=void 0===s?-1:s,r=e.groupId,a=void 0===r?-1:r,l=e.customProperties,c=void 0===l?null:l,u=e.placeholder,h=void 0!==u&&u,d=e.keyCode,f=void 0===d?null:d,m="string"==typeof t?t.trim():t,p=f,v=c,g=this._store.items,b=n||m,y=o||-1,_=a>=0?this._store.getGroupById(a):null,E=g?g.length+1:1;return this.config.prependValue&&(m=this.config.prependValue+m.toString()),this.config.appendValue&&(m+=this.config.appendValue.toString()),this._store.dispatch(function(e){return{type:"ADD_ITEM",value:e.value,label:e.label,id:e.id,choiceId:e.choiceId,groupId:e.groupId,customProperties:e.customProperties,placeholder:e.placeholder,keyCode:e.keyCode}}({value:m,label:b,id:E,choiceId:y,groupId:a,customProperties:c,placeholder:h,keyCode:p})),this._isSelectOneElement&&this.removeActiveItems(E),this.passedElement.triggerEvent("addItem",{id:E,value:m,label:b,customProperties:v,groupValue:_&&_.value?_.value:void 0,keyCode:p}),this},s._removeItem=function(e){if(!e||!E("Object",e))return this;var t=e.id,i=e.value,n=e.label,s=e.choiceId,o=e.groupId,r=o>=0?this._store.getGroupById(o):null;return this._store.dispatch(function(e,t){return{type:"REMOVE_ITEM",id:e,choiceId:t}}(t,s)),r&&r.value?this.passedElement.triggerEvent(M,{id:t,value:i,label:n,groupValue:r.value}):this.passedElement.triggerEvent(M,{id:t,value:i,label:n}),this},s._addChoice=function(e){var t=e.value,i=e.label,n=void 0===i?null:i,s=e.isSelected,o=void 0!==s&&s,r=e.isDisabled,a=void 0!==r&&r,l=e.groupId,c=void 0===l?-1:l,u=e.customProperties,h=void 0===u?null:u,d=e.placeholder,f=void 0!==d&&d,m=e.keyCode,p=void 0===m?null:m;if(null!=t){var v=this._store.choices,g=n||t,b=v?v.length+1:1,y=this._baseId+"-"+this._idNames.itemChoice+"-"+b;this._store.dispatch(function(e){return{type:"ADD_CHOICE",value:e.value,label:e.label,id:e.id,groupId:e.groupId,disabled:e.disabled,elementId:e.elementId,customProperties:e.customProperties,placeholder:e.placeholder,keyCode:e.keyCode}}({id:b,groupId:c,elementId:y,value:t,label:g,disabled:a,customProperties:h,placeholder:f,keyCode:p})),o&&this._addItem({value:t,label:g,choiceId:b,customProperties:h,placeholder:f,keyCode:p})}},s._addGroup=function(e){var t=this,i=e.group,n=e.id,s=e.valueKey,o=void 0===s?"value":s,r=e.labelKey,a=void 0===r?"label":r,l=E("Object",i)?i.choices:Array.from(i.getElementsByTagName("OPTION")),c=n||Math.floor((new Date).valueOf()*Math.random()),u=!!i.disabled&&i.disabled;l?(this._store.dispatch(Z({value:i.label,id:c,active:!0,disabled:u})),l.forEach((function(e){var i=e.disabled||e.parentNode&&e.parentNode.disabled;t._addChoice({value:e[o],label:E("Object",e)?e[a]:e.innerHTML,isSelected:e.selected,isDisabled:i,groupId:c,customProperties:e.customProperties,placeholder:e.placeholder})}))):this._store.dispatch(Z({value:i.label,id:i.id,active:!1,disabled:i.disabled}))},s._getTemplate=function(e){var t;if(!e)return null;for(var i=this.config.classNames,n=arguments.length,s=new Array(n>1?n-1:0),o=1;o<n;o++)s[o-1]=arguments[o];return(t=this._templates[e]).call.apply(t,[this,i].concat(s))},s._createTemplates=function(){var e=this.config.callbackOnCreateTemplates,t={};e&&"function"==typeof e&&(t=e.call(this,w)),this._templates=a()(U,t)},s._createElements=function(){this.containerOuter=new R({element:this._getTemplate("containerOuter",this._direction,this._isSelectElement,this._isSelectOneElement,this.config.searchEnabled,this.passedElement.element.type),classNames:this.config.classNames,type:this.passedElement.element.type,position:this.config.position}),this.containerInner=new R({element:this._getTemplate("containerInner"),classNames:this.config.classNames,type:this.passedElement.element.type,position:this.config.position}),this.input=new H({element:this._getTemplate("input",this._placeholderValue),classNames:this.config.classNames,type:this.passedElement.element.type,preventPaste:!this.config.paste}),this.choiceList=new q({element:this._getTemplate("choiceList",this._isSelectOneElement)}),this.itemList=new q({element:this._getTemplate("itemList",this._isSelectOneElement)}),this.dropdown=new k({element:this._getTemplate("dropdown"),classNames:this.config.classNames,type:this.passedElement.element.type})},s._createStructure=function(){this.passedElement.conceal(),this.containerInner.wrap(this.passedElement.element),this.containerOuter.wrap(this.containerInner.element),this._isSelectOneElement?this.input.placeholder=this.config.searchPlaceholderValue||"":this._placeholderValue&&(this.input.placeholder=this._placeholderValue,this.input.setWidth()),this.containerOuter.element.appendChild(this.containerInner.element),this.containerOuter.element.appendChild(this.dropdown.element),this.containerInner.element.appendChild(this.itemList.element),this._isTextElement||this.dropdown.element.appendChild(this.choiceList.element),this._isSelectOneElement?this.config.searchEnabled&&this.dropdown.element.insertBefore(this.input.element,this.dropdown.element.firstChild):this.containerInner.element.appendChild(this.input.element),this._isSelectElement&&(this._highlightPosition=0,this._isSearching=!1,this._startLoading(),this._presetGroups.length?this._addPredefinedGroups(this._presetGroups):this._addPredefinedChoices(this._presetChoices),this._stopLoading()),this._isTextElement&&this._addPredefinedItems(this._presetItems)},s._addPredefinedGroups=function(e){var t=this,i=this.passedElement.placeholderOption;i&&"SELECT"===i.parentNode.tagName&&this._addChoice({value:i.value,label:i.innerHTML,isSelected:i.selected,isDisabled:i.disabled,placeholder:!0}),e.forEach((function(e){return t._addGroup({group:e,id:e.id||null})}))},s._addPredefinedChoices=function(e){var t=this;this.config.shouldSort&&e.sort(this.config.sorter);var i=e.some((function(e){return e.selected})),n=e.findIndex((function(e){return void 0===e.disabled||!e.disabled}));e.forEach((function(e,s){var o=e.value,r=e.label,a=e.customProperties,l=e.placeholder;if(t._isSelectElement)if(e.choices)t._addGroup({group:e,id:e.id||null});else{var c=!(!t._isSelectOneElement||i||s!==n)||e.selected,u=e.disabled;t._addChoice({value:o,label:r,isSelected:c,isDisabled:u,customProperties:a,placeholder:l})}else t._addChoice({value:o,label:r,isSelected:e.selected,isDisabled:e.disabled,customProperties:a,placeholder:l})}))},s._addPredefinedItems=function(t){var i=this;t.forEach((function(t){"object"==e(t)&&t.value&&i._addItem({value:t.value,label:t.label,choiceId:t.id,customProperties:t.customProperties,placeholder:t.placeholder}),"string"==typeof t&&i._addItem({value:t})}))},s._setChoiceOrItem=function(e){var t=this;({object:function(){e.value&&(t._isTextElement?t._addItem({value:e.value,label:e.label,choiceId:e.id,customProperties:e.customProperties,placeholder:e.placeholder}):t._addChoice({value:e.value,label:e.label,isSelected:!0,isDisabled:!1,customProperties:e.customProperties,placeholder:e.placeholder}))},string:function(){t._isTextElement?t._addItem({value:e}):t._addChoice({value:e,label:e,isSelected:!0,isDisabled:!1})}})[_(e).toLowerCase()]()},s._findAndSelectChoiceByValue=function(e){var t=this,i=this._store.choices.find((function(i){return t.config.valueComparer(i.value,e)}));i&&!i.selected&&this._addItem({value:i.value,label:i.label,choiceId:i.id,groupId:i.groupId,customProperties:i.customProperties,placeholder:i.placeholder,keyCode:i.keyCode})},s._generatePlaceholderValue=function(){if(this._isSelectElement){var e=this.passedElement.placeholderOption;return!!e&&e.text}var t=this.config,i=t.placeholder,n=t.placeholderValue,s=this.passedElement.element.dataset;if(i){if(n)return n;if(s.placeholder)return s.placeholder}return!1},n}();i.default=ie}]).default,document.addEventListener("DOMContentLoaded",(function(){new JustValidate(".form",{colorWrong:"#F31111",rules:{name:{required:!0,minLength:2,maxLength:10},mail:{required:!0,email:!0}},messages:{name:{required:"ÐÐ°Ðº Ð²Ð°Ñ Ð·Ð¾Ð²ÑÑ?"},mail:{required:"Ð£ÐºÐ°Ð¶Ð¸ÑÐµ Ð²Ð°Ñ email"}}})}));var e="function"==typeof Symbol&&"symbol"==t(Symbol.iterator)?function(e){return t(e)}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":t(e)};function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}function n(){var t=window,i=document;if(!("scrollBehavior"in i.documentElement.style)||!0===t.__forceSmoothScrollPolyfill__){var n,s=t.HTMLElement||t.Element,o={scroll:t.scroll||t.scrollTo,scrollBy:t.scrollBy,elementScroll:s.prototype.scroll||l,scrollIntoView:s.prototype.scrollIntoView},r=t.performance&&t.performance.now?t.performance.now.bind(t.performance):Date.now,a=(n=t.navigator.userAgent,new RegExp(["MSIE ","Trident/","Edge/"].join("|")).test(n)?1:0);t.scroll=t.scrollTo=function(){void 0!==arguments[0]&&(!0!==c(arguments[0])?p.call(t,i.body,void 0!==arguments[0].left?~~arguments[0].left:t.scrollX||t.pageXOffset,void 0!==arguments[0].top?~~arguments[0].top:t.scrollY||t.pageYOffset):o.scroll.call(t,void 0!==arguments[0].left?arguments[0].left:"object"!==e(arguments[0])?arguments[0]:t.scrollX||t.pageXOffset,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:t.scrollY||t.pageYOffset))},t.scrollBy=function(){void 0!==arguments[0]&&(c(arguments[0])?o.scrollBy.call(t,void 0!==arguments[0].left?arguments[0].left:"object"!==e(arguments[0])?arguments[0]:0,void 0!==arguments[0].top?arguments[0].top:void 0!==arguments[1]?arguments[1]:0):p.call(t,i.body,~~arguments[0].left+(t.scrollX||t.pageXOffset),~~arguments[0].top+(t.scrollY||t.pageYOffset)))},s.prototype.scroll=s.prototype.scrollTo=function(){if(void 0!==arguments[0])if(!0!==c(arguments[0])){var t=arguments[0].left,i=arguments[0].top;p.call(this,this,void 0===t?this.scrollLeft:~~t,void 0===i?this.scrollTop:~~i)}else{if("number"==typeof arguments[0]&&void 0===arguments[1])throw new SyntaxError("Value could not be converted");o.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left:"object"!==e(arguments[0])?~~arguments[0]:this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top:void 0!==arguments[1]?~~arguments[1]:this.scrollTop)}},s.prototype.scrollBy=function(){void 0!==arguments[0]&&(!0!==c(arguments[0])?this.scroll({left:~~arguments[0].left+this.scrollLeft,top:~~arguments[0].top+this.scrollTop,behavior:arguments[0].behavior}):o.elementScroll.call(this,void 0!==arguments[0].left?~~arguments[0].left+this.scrollLeft:~~arguments[0]+this.scrollLeft,void 0!==arguments[0].top?~~arguments[0].top+this.scrollTop:~~arguments[1]+this.scrollTop))},s.prototype.scrollIntoView=function(){if(!0!==c(arguments[0])){var e=f(this),n=e.getBoundingClientRect(),s=this.getBoundingClientRect();e!==i.body?(p.call(this,e,e.scrollLeft+s.left-n.left,e.scrollTop+s.top-n.top),"fixed"!==t.getComputedStyle(e).position&&t.scrollBy({left:n.left,top:n.top,behavior:"smooth"})):t.scrollBy({left:s.left,top:s.top,behavior:"smooth"})}else o.scrollIntoView.call(this,void 0===arguments[0]||arguments[0])}}function l(e,t){this.scrollLeft=e,this.scrollTop=t}function c(t){if(null===t||"object"!==e(t)||void 0===t.behavior||"auto"===t.behavior||"instant"===t.behavior)return!0;if("object"===e(t)&&"smooth"===t.behavior)return!1;throw new TypeError("behavior member of ScrollOptions "+t.behavior+" is not a valid value for enumeration ScrollBehavior.")}function u(e,t){return"Y"===t?e.clientHeight+a<e.scrollHeight:"X"===t?e.clientWidth+a<e.scrollWidth:void 0}function h(e,i){var n=t.getComputedStyle(e,null)["overflow"+i];return"auto"===n||"scroll"===n}function d(e){var t=u(e,"Y")&&h(e,"Y"),i=u(e,"X")&&h(e,"X");return t||i}function f(e){for(;e!==i.body&&!1===d(e);)e=e.parentNode||e.host;return e}function m(e){var i,n,s,o,a=(r()-e.startTime)/468;o=a=a>1?1:a,i=.5*(1-Math.cos(Math.PI*o)),n=e.startX+(e.x-e.startX)*i,s=e.startY+(e.y-e.startY)*i,e.method.call(e.scrollable,n,s),n===e.x&&s===e.y||t.requestAnimationFrame(m.bind(t,e))}function p(e,n,s){var a,c,u,h,d=r();e===i.body?(a=t,c=t.scrollX||t.pageXOffset,u=t.scrollY||t.pageYOffset,h=o.scroll):(a=e,c=e.scrollLeft,u=e.scrollTop,h=l),m({scrollable:a,method:h,startTime:d,startX:c,startY:u,x:n,y:s})}}!function(){for(var e=["DocumentType","Element","CharacterData"],t=function(){null!=this.parentNode&&this.parentNode.removeChild(this)},i=0;i<e.length;i++){var n=e[i];window[n]&&!window[n].prototype.remove&&(window[n].prototype.remove=t)}}(),function(t){function i(){}function n(t){if("object"!==e(this))throw new TypeError("Promises must be constructed via new");if("function"!=typeof t)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],c(t,this)}function s(e,t){for(;3===e._state;)e=e._value;return 0===e._state?void e._deferreds.push(t):(e._handled=!0,void n._immediateFn((function(){var i=1===e._state?t.onFulfilled:t.onRejected;if(null!==i){var n;try{n=i(e._value)}catch(e){return void r(t.promise,e)}o(t.promise,n)}else(1===e._state?o:r)(t.promise,e._value)})))}function o(t,i){try{if(i===t)throw new TypeError("A promise cannot be resolved with itself.");if(i&&("object"===(void 0===i?"undefined":e(i))||"function"==typeof i)){var s=i.then;if(i instanceof n)return t._state=3,t._value=i,void a(t);if("function"==typeof s)return void c(function(e,t){return function(){e.apply(t,arguments)}}(s,i),t)}t._state=1,t._value=i,a(t)}catch(e){r(t,e)}}function r(e,t){e._state=2,e._value=t,a(e)}function a(e){2===e._state&&0===e._deferreds.length&&n._immediateFn((function(){e._handled||n._unhandledRejectionFn(e._value)}));for(var t=0,i=e._deferreds.length;t<i;t++)s(e,e._deferreds[t]);e._deferreds=null}function l(e,t,i){this.onFulfilled="function"==typeof e?e:null,this.onRejected="function"==typeof t?t:null,this.promise=i}function c(e,t){var i=!1;try{e((function(e){i||(i=!0,o(t,e))}),(function(e){i||(i=!0,r(t,e))}))}catch(e){if(i)return;i=!0,r(t,e)}}var u=setTimeout;n.prototype.catch=function(e){return this.then(null,e)},n.prototype.then=function(e,t){var n=new this.constructor(i);return s(this,new l(e,t,n)),n},n.all=function(t){var i=Array.prototype.slice.call(t);return new n((function(t,n){function s(r,a){try{if(a&&("object"===(void 0===a?"undefined":e(a))||"function"==typeof a)){var l=a.then;if("function"==typeof l)return void l.call(a,(function(e){s(r,e)}),n)}i[r]=a,0==--o&&t(i)}catch(e){n(e)}}if(0===i.length)return t([]);for(var o=i.length,r=0;r<i.length;r++)s(r,i[r])}))},n.resolve=function(t){return t&&"object"===(void 0===t?"undefined":e(t))&&t.constructor===n?t:new n((function(e){e(t)}))},n.reject=function(e){return new n((function(t,i){i(e)}))},n.race=function(e){return new n((function(t,i){for(var n=0,s=e.length;n<s;n++)e[n].then(t,i)}))},n._immediateFn="function"==typeof setImmediate&&function(e){setImmediate(e)}||function(e){u(e,0)},n._unhandledRejectionFn=function(e){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",e)},n._setImmediateFn=function(e){n._immediateFn=e},n._setUnhandledRejectionFn=function(e){n._unhandledRejectionFn=e},"undefined"!=typeof module&&module.exports?module.exports=n:t.Promise||(t.Promise=n)}(window),function(t){t.Promise||(t.Promise=Promise);var n="required",s="email",o="minLength",r="maxLength",a="password",l="phone",c="remote",u="strength",h="function",d=function(e,t){if("string"==typeof e)return e;var i="post"===t.toLowerCase()?"":"?";return Array.isArray(e)?i+e.map((function(e){return e.name+"="+e.value})).join("&"):i+Object.keys(e).map((function(t){return t+"="+e[t]})).join("&")},f=function(e){var t=e.url,i=e.method,n=e.data,s=e.debug,o=e.callback,r=e.error;if(s)o("test");else{var a=!1!==e.async,l=new XMLHttpRequest,c=d(n,"get"),u=null;"post"===i.toLowerCase()&&(u=d(n,"post"),c=""),l.open(i,t+c,a),l.setRequestHeader("Content-Type","application/x-www-form-urlencoded"),l.onreadystatechange=function(){4===this.readyState&&(200===this.status?o(this.responseText):r&&r(this.responseText))},l.send(u)}},m=function(e,t){this.options=t||{},this.rules=this.options.rules||{},this.messages=this.options.messages||void 0,this.colorWrong=this.options.colorWrong||"#B81111",this.result={},this.elements=[],this.tooltip=this.options.tooltip||{},this.tooltipFadeOutTime=this.tooltip.fadeOutTime||5e3,this.tooltipFadeOutClass=this.tooltip.fadeOutClass||"just-validate-tooltip-hide",this.tooltipSelectorWrap=document.querySelectorAll(this.tooltip.selectorWrap).length?document.querySelectorAll(this.tooltip.selectorWrap):document.querySelectorAll(".just-validate-tooltip-container"),this.bindHandlerKeyup=this.handlerKeyup.bind(this),this.submitHandler=this.options.submitHandler||void 0,this.invalidFormCallback=this.options.invalidFormCallback||void 0,this.promisesRemote=[],this.isValidationSuccess=!1,this.focusWrongField=this.options.focusWrongField||!1,this.REGEXP={email:/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,zip:/^\d{5}(-\d{4})?$/,phone:/^([0-9]( |-)?)?(\(?[0-9]{3}\)?|[0-9]{3})( |-)?([0-9]{3}( |-)?[0-9]{4}|[a-zA-Z0-9]{7})$/,password:/[^\w\d]*(([0-9]+.*[A-Za-z]+.*)|[A-Za-z]+.*([0-9]+.*))/,strengthPass:/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]/},this.DEFAULT_REMOTE_ERROR="Error",this.state={tooltipsTimer:null},this.setForm(document.querySelector(e))};m.prototype={defaultRules:{email:{required:!0,email:!0},name:{required:!0,minLength:3,maxLength:15},text:{required:!0,maxLength:300,minLength:5},password:{required:!0,password:!0,minLength:4,maxLength:8},zip:{required:!0,zip:!0},phone:{phone:!0}},defaultMessages:{required:"The field is required",email:"Please, type a valid email",maxLength:"The field must contain a maximum of :value characters",minLength:"The field must contain a minimum of :value characters",password:"Password is not valid",remote:"Email already exists",strength:"Password must contents at least one uppercase letter, one lowercase letter and one number",function:"Function returned false"},handlerKeyup:function(e){var t=e.target,i={name:t.getAttribute("data-validate-field"),value:t.value};delete this.result[i.name],this.validateItem({name:i.name,value:i.value,group:[],isKeyupChange:!0}),this.renderErrors()},setterEventListener:function(e,t,i,n){switch("keyup"===t&&(i=this.bindHandlerKeyup),n){case"add":e.addEventListener(t,i);break;case"remove":e.removeEventListener(t,i)}},getElementsRealValue:function(){for(var e=this.$form.querySelectorAll("*"),t=void 0,i={},n=0,s=e.length;n<s;++n)if(t=e[n].getAttribute("name")){if("checkbox"===e[n].type){i[t]=e[n].checked;continue}i[t]=e[n].value}return i},validationFailed:function(){this.invalidFormCallback&&this.invalidFormCallback(this.result);var e=document.querySelector(".js-validate-error-field");this.focusWrongField&&e&&e.focus&&e.focus()},validationSuccess:function(){if(0===Object.keys(this.result).length){if(this.isValidationSuccess=!1,this.submitHandler){var e=this.getElementsRealValue();return void this.submitHandler(this.$form,e,f)}this.$form.submit()}},setForm:function(e){var t=this;this.$form=e,this.$form.setAttribute("novalidate","novalidate"),this.$form.addEventListener("submit",(function(e){return e.preventDefault(),t.result=[],t.getElements(),t.promisesRemote.length?void Promise.all(t.promisesRemote).then((function(){t.promisesRemote=[],t.isValidationSuccess?t.validationSuccess():t.validationFailed()})):void(t.isValidationSuccess?t.validationSuccess():t.validationFailed())}))},isEmail:function(e){return this.REGEXP.email.test(e)},isZip:function(e){return this.REGEXP.zip.test(e)},isPhone:function(e){return this.REGEXP.phone.test(e)},isPassword:function(e){return this.REGEXP.password.test(e)},isEmpty:function(e){var t=e;return e.trim&&(t=e.trim()),!t},checkLengthMax:function(e,t){return e.length<=t},checkLengthMin:function(e,t){return e.length>=t},checkStrengthPass:function(e){return this.REGEXP.strengthPass.test(e)},getElements:function(){var e=this,t=this.$form.querySelectorAll("[data-validate-field]");this.elements=[];for(var i=function(i,n){var s=t[i],o=s.getAttribute("data-validate-field"),r=s.value,a=!1,l=[];if("checkbox"===s.type&&(r=s.checked||"",s.addEventListener("change",(function(t){var i=t.target,n={name:i.getAttribute("data-validate-field"),value:i.checked};delete e.result[n.name],e.validateItem({name:n.name,value:n.value,group:[]}),e.renderErrors()}))),"radio"===s.type){var c=e.elements.filter((function(e){if(e.name===o)return e}))[0];c?(c.group.push(s.checked),a=!0):l.push(s.checked),s.addEventListener("change",(function(t){var i=t.target,n={name:i.getAttribute("data-validate-field"),value:i.checked};delete e.result[n.name],e.validateItem({name:n.name,value:n.value,group:[]}),e.renderErrors()}))}e.setterEventListener(s,"keyup",e.handlerKeyup,"add"),a||e.elements.push({name:o,value:r,group:l})},n=0,s=t.length;n<s;++n)i(n);this.validateElements()},validateRequired:function(e){return!this.isEmpty(e)},validateEmail:function(e){return this.isEmail(e)},validatePhone:function(e){return this.isPhone(e)},validateMinLength:function(e,t){return this.checkLengthMin(e,t)},validateMaxLength:function(e,t){return this.checkLengthMax(e,t)},validateStrengthPass:function(e){return this.checkStrengthPass(e)},validatePassword:function(e){return this.isPassword(e)},validateZip:function(e){return this.isZip(e)},validateRemote:function(e){var t=e.value,n=e.name,s=e.url,o=e.successAnswer,r=e.sendParam,a=e.method;return new Promise((function(e){f({url:s,method:a,data:i({},r,t),async:!0,callback:function(t){t.toLowerCase()===o.toLowerCase()&&e("ok"),e({type:"incorrect",name:n})},error:function(){e({type:"error",name:n})}})}))},generateMessage:function(e,t,i){var n=this.messages||this.defaultMessages,s=n[t]&&n[t][e]||this.messages&&"string"==typeof this.messages[t]&&n[t]||this.defaultMessages[e]||this.DEFAULT_REMOTE_ERROR;i&&(s=s.replace(":value",i.toString())),this.result[t]={message:s}},validateElements:function(){var e=this;return this.lockForm(),this.elements.forEach((function(t){e.validateItem({name:t.name,value:t.value,group:t.group})})),this.promisesRemote.length?void Promise.all(this.promisesRemote).then((function(t){t.forEach((function(t){return"ok"===t||("error"===t.type&&alert("Server error occured. Please try later."),e.generateMessage(c,t.name)),void e.renderErrors()}))})):void this.renderErrors()},validateItem:function(t){var i=this,d=t.name,f=t.group,m=t.value,p=t.isKeyupChange,v=this.rules[d]||this.defaultRules[d]||!1;if(v)for(var g in v){var b=v[g];if(g!==n&&g!==h&&""==m)return;switch(g){case h:if("function"!=typeof b)break;if(b(d,m))break;return void this.generateMessage(h,d,b);case n:if(!b)break;if(f.length){var y=!1;if(f.forEach((function(e){i.validateRequired(e)&&(y=!0)})),y)break}else if(this.validateRequired(m))break;return void this.generateMessage(n,d);case s:if(!b)break;if(this.validateEmail(m))break;return void this.generateMessage(s,d);case o:if(!b)break;if(this.validateMinLength(m,b))break;return void this.generateMessage(o,d,b);case r:if(!b)break;if(this.validateMaxLength(m,b))break;return void this.generateMessage(r,d,b);case l:if(!b)break;if(this.validatePhone(m))break;return void this.generateMessage(l,d);case a:if(!b)break;if(this.validatePassword(m))break;return void this.generateMessage(a,d);case u:if(!b||"object"!==(void 0===b?"undefined":e(b)))break;if(b.default&&this.validateStrengthPass(m))break;if(b.custom){var _=void 0;try{_=new RegExp(b.custom)}catch(e){_=this.REGEXP.strengthPass,console.error("Custom regexp for strength rule is not valid. Default regexp was used.")}if(_.test(m))break}return void this.generateMessage(u,d);case"zip":if(!b)break;if(this.validateZip(m))break;return void this.generateMessage("zip",d);case c:if(p)break;if(!b)break;var E=b.url,S=b.successAnswer,w=b.method,I=b.sendParam,O=this.$form.querySelector('input[data-validate-field="'+d+'"]');return this.setterEventListener(O,"keyup",this.handlerKeyup,"remove"),void this.promisesRemote.push(this.validateRemote({name:d,value:m,url:E,method:w,sendParam:I,successAnswer:S}))}}},clearErrors:function(){for(var e=document.querySelectorAll(".js-validate-error-label"),t=0,i=e.length;t<i;++t)e[t].remove();for(var n=0,s=(e=document.querySelectorAll(".js-validate-error-field")).length;n<s;++n)e[n].classList.remove("js-validate-error-field"),e[n].style.border="",e[n].style.color=""},renderErrors:function(){var e=this;if(this.clearErrors(),this.unlockForm(),this.isValidationSuccess=!1,0!==Object.keys(this.result).length){for(var t in this.result){var i=this.result[t].message,n=this.$form.querySelectorAll('[data-validate-field="'+t+'"]'),s=n[n.length-1],o=document.createElement("div");if(o.innerHTML=i,o.className="js-validate-error-label",o.setAttribute("style","color: "+this.colorWrong),s.style.border="1px solid "+this.colorWrong,s.style.color=""+this.colorWrong,s.classList.add("js-validate-error-field"),"checkbox"===s.type||"radio"===s.type){var r=document.querySelector('label[for="'+s.getAttribute("id")+'"]');"label"===s.parentNode.tagName.toLowerCase()?s.parentNode.parentNode.insertBefore(o,null):r?r.parentNode.insertBefore(o,r.nextSibling):s.parentNode.insertBefore(o,s.nextSibling)}else s.parentNode.insertBefore(o,s.nextSibling)}this.tooltipSelectorWrap.length&&(this.state.tooltipsTimer=setTimeout((function(){e.hideTooltips()}),this.tooltipFadeOutTime))}else this.isValidationSuccess=!0},hideTooltips:function(){var e=this;document.querySelectorAll(".js-validate-error-label").forEach((function(t){t.classList.add(e.tooltipFadeOutClass)})),this.state.tooltipsTimer=null},lockForm:function(){for(var e=this.$form.querySelectorAll("input, textarea, button, select"),t=0,i=e.length;t<i;++t)e[t].setAttribute("disabled","disabled"),e[t].style.pointerEvents="none",e[t].style.webitFilter="grayscale(100%)",e[t].style.filter="grayscale(100%)"},unlockForm:function(){for(var e=this.$form.querySelectorAll("input, textarea, button, select"),t=0,i=e.length;t<i;++t)e[t].removeAttribute("disabled"),e[t].style.pointerEvents="",e[t].style.webitFilter="",e[t].style.filter=""}},t.JustValidate=m}(window),document.getElementById("btn__submit").addEventListener("click",(function(){var e=new XMLHttpRequest;e.open("POST","mail.php",!1),e.send(JSON.stringify({name:document.getElementById("name").value,email:document.getElementById("email").value,purpose:document.querySelector("#selectCustom option").value}))})),"object"===("undefined"==typeof exports?"undefined":e(exports))&&"undefined"!=typeof module?module.exports={polyfill:n}:n();var s=document.querySelector("#selectCustom"),o=(new Choices(s,{searchEnabled:!1,itemSelectText:""}),new Date);document.getElementById("footer--year").innerHTML=o.getFullYear();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
